package com.real.fudousan.texture.vo;

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * 텍스쳐 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class Texture implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** TEXTURE_ID. */
	private Integer textureId;

	/** 텍스쳐 분류. */
	private TextureType textureType;

	/** 회원. */
	private Member member;

	/** NAME. */
	private String name;

	/** TEXT. */
	private String text;

	/** FILE. */
	private String file;

	/** DATE. */
	private Date date;

	/** DEL_DATE. */
	private Date delDate;

	/** 3D 방 목록. */
	private Set<Room> roomSet;

	/** 3D 방 목록. */
	private Set<Room> roomSet;

	/** 방 벽 목록. */
	private Set<RoomWall> roomWallSet;

	/** 방 벽 목록. */
	private Set<RoomWall> roomWallSet;

	/**
	 * 생성자.
	 */
	public Texture() {
		this.roomSet = new HashSet<Room>();
		this.roomWallSet = new HashSet<RoomWall>();
	}

	/**
	 * TEXTURE_ID을 설정합니다..
	 * 
	 * @param textureId
	 *            TEXTURE_ID
	 */
	public void setTextureId(Integer textureId) {
		this.textureId = textureId;
	}

	/**
	 * TEXTURE_ID을 가져옵니다..
	 * 
	 * @return TEXTURE_ID
	 */
	public Integer getTextureId() {
		return this.textureId;
	}

	/**
	 * 텍스쳐 분류을 설정합니다..
	 * 
	 * @param textureType
	 *            텍스쳐 분류
	 */
	public void setTextureType(TextureType textureType) {
		this.textureType = textureType;
	}

	/**
	 * 텍스쳐 분류을 가져옵니다..
	 * 
	 * @return 텍스쳐 분류
	 */
	public TextureType getTextureType() {
		return this.textureType;
	}

	/**
	 * 회원을 설정합니다..
	 * 
	 * @param member
	 *            회원
	 */
	public void setMember(Member member) {
		this.member = member;
	}

	/**
	 * 회원을 가져옵니다..
	 * 
	 * @return 회원
	 */
	public Member getMember() {
		return this.member;
	}

	/**
	 * NAME을 설정합니다..
	 * 
	 * @param name
	 *            NAME
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * NAME을 가져옵니다..
	 * 
	 * @return NAME
	 */
	public String getName() {
		return this.name;
	}

	/**
	 * TEXT을 설정합니다..
	 * 
	 * @param text
	 *            TEXT
	 */
	public void setText(String text) {
		this.text = text;
	}

	/**
	 * TEXT을 가져옵니다..
	 * 
	 * @return TEXT
	 */
	public String getText() {
		return this.text;
	}

	/**
	 * FILE을 설정합니다..
	 * 
	 * @param file
	 *            FILE
	 */
	public void setFile(String file) {
		this.file = file;
	}

	/**
	 * FILE을 가져옵니다..
	 * 
	 * @return FILE
	 */
	public String getFile() {
		return this.file;
	}

	/**
	 * DATE을 설정합니다..
	 * 
	 * @param date
	 *            DATE
	 */
	public void setDate(Date date) {
		this.date = date;
	}

	/**
	 * DATE을 가져옵니다..
	 * 
	 * @return DATE
	 */
	public Date getDate() {
		return this.date;
	}

	/**
	 * DEL_DATE을 설정합니다..
	 * 
	 * @param delDate
	 *            DEL_DATE
	 */
	public void setDelDate(Date delDate) {
		this.delDate = delDate;
	}

	/**
	 * DEL_DATE을 가져옵니다..
	 * 
	 * @return DEL_DATE
	 */
	public Date getDelDate() {
		return this.delDate;
	}

	/**
	 * 3D 방 목록을 설정합니다..
	 * 
	 * @param roomSet
	 *            3D 방 목록
	 */
	public void setRoomSet(Set<Room> roomSet) {
		this.roomSet = roomSet;
	}

	/**
	 * 3D 방를 추가합니다..
	 * 
	 * @param room
	 *            3D 방
	 */
	public void addRoom(Room room) {
		this.roomSet.add(room);
	}

	/**
	 * 3D 방 목록을 가져옵니다..
	 * 
	 * @return 3D 방 목록
	 */
	public Set<Room> getRoomSet() {
		return this.roomSet;
	}

	/**
	 * 3D 방 목록을 설정합니다..
	 * 
	 * @param roomSet
	 *            3D 방 목록
	 */
	public void setRoomSet(Set<Room> roomSet) {
		this.roomSet = roomSet;
	}

	/**
	 * 3D 방를 추가합니다..
	 * 
	 * @param room
	 *            3D 방
	 */
	public void addRoom(Room room) {
		this.roomSet.add(room);
	}

	/**
	 * 3D 방 목록을 가져옵니다..
	 * 
	 * @return 3D 방 목록
	 */
	public Set<Room> getRoomSet() {
		return this.roomSet;
	}

	/**
	 * 방 벽 목록을 설정합니다..
	 * 
	 * @param roomWallSet
	 *            방 벽 목록
	 */
	public void setRoomWallSet(Set<RoomWall> roomWallSet) {
		this.roomWallSet = roomWallSet;
	}

	/**
	 * 방 벽를 추가합니다..
	 * 
	 * @param roomWall
	 *            방 벽
	 */
	public void addRoomWall(RoomWall roomWall) {
		this.roomWallSet.add(roomWall);
	}

	/**
	 * 방 벽 목록을 가져옵니다..
	 * 
	 * @return 방 벽 목록
	 */
	public Set<RoomWall> getRoomWallSet() {
		return this.roomWallSet;
	}

	/**
	 * 방 벽 목록을 설정합니다..
	 * 
	 * @param roomWallSet
	 *            방 벽 목록
	 */
	public void setRoomWallSet(Set<RoomWall> roomWallSet) {
		this.roomWallSet = roomWallSet;
	}

	/**
	 * 방 벽를 추가합니다..
	 * 
	 * @param roomWall
	 *            방 벽
	 */
	public void addRoomWall(RoomWall roomWall) {
		this.roomWallSet.add(roomWall);
	}

	/**
	 * 방 벽 목록을 가져옵니다..
	 * 
	 * @return 방 벽 목록
	 */
	public Set<RoomWall> getRoomWallSet() {
		return this.roomWallSet;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((textureId == null) ? 0 : textureId.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		Texture other = (Texture) obj;
		if (textureId == null) {
			if (other.textureId != null) {
				return false;
			}
		} else if (!textureId.equals(other.textureId)) {
			return false;
		}
		return true;
	}

}
