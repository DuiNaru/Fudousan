package com.real.fudousan.roomitem.vo;

import java.io.Serializable;

/**
 * 방 배치 아이템 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class Roomitem implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** ROOMITEM_ID. */
	private Integer roomitemId;

	/** 3D 방. */
	private Room room;

	/** 3D 방 내부 아이템 들. */
	private Item item;

	/** X. */
	private Integer x;

	/** Y. */
	private Integer y;

	/** Z. */
	private Integer z;

	/** ROTATE_X. */
	private Integer rotateX;

	/** ROTATE_Y. */
	private Integer rotateY;

	/** ROTATE_Z. */
	private Integer rotateZ;

	/** COLOR. */
	private Integer color;

	/**
	 * 생성자.
	 */
	public Roomitem() {
	}

	/**
	 * ROOMITEM_ID을 설정합니다..
	 * 
	 * @param roomitemId
	 *            ROOMITEM_ID
	 */
	public void setRoomitemId(Integer roomitemId) {
		this.roomitemId = roomitemId;
	}

	/**
	 * ROOMITEM_ID을 가져옵니다..
	 * 
	 * @return ROOMITEM_ID
	 */
	public Integer getRoomitemId() {
		return this.roomitemId;
	}

	/**
	 * 3D 방을 설정합니다..
	 * 
	 * @param room
	 *            3D 방
	 */
	public void setRoom(Room room) {
		this.room = room;
	}

	/**
	 * 3D 방을 가져옵니다..
	 * 
	 * @return 3D 방
	 */
	public Room getRoom() {
		return this.room;
	}

	/**
	 * 3D 방 내부 아이템 들을 설정합니다..
	 * 
	 * @param item
	 *            3D 방 내부 아이템 들
	 */
	public void setItem(Item item) {
		this.item = item;
	}

	/**
	 * 3D 방 내부 아이템 들을 가져옵니다..
	 * 
	 * @return 3D 방 내부 아이템 들
	 */
	public Item getItem() {
		return this.item;
	}

	/**
	 * X을 설정합니다..
	 * 
	 * @param x
	 *            X
	 */
	public void setX(Integer x) {
		this.x = x;
	}

	/**
	 * X을 가져옵니다..
	 * 
	 * @return X
	 */
	public Integer getX() {
		return this.x;
	}

	/**
	 * Y을 설정합니다..
	 * 
	 * @param y
	 *            Y
	 */
	public void setY(Integer y) {
		this.y = y;
	}

	/**
	 * Y을 가져옵니다..
	 * 
	 * @return Y
	 */
	public Integer getY() {
		return this.y;
	}

	/**
	 * Z을 설정합니다..
	 * 
	 * @param z
	 *            Z
	 */
	public void setZ(Integer z) {
		this.z = z;
	}

	/**
	 * Z을 가져옵니다..
	 * 
	 * @return Z
	 */
	public Integer getZ() {
		return this.z;
	}

	/**
	 * ROTATE_X을 설정합니다..
	 * 
	 * @param rotateX
	 *            ROTATE_X
	 */
	public void setRotateX(Integer rotateX) {
		this.rotateX = rotateX;
	}

	/**
	 * ROTATE_X을 가져옵니다..
	 * 
	 * @return ROTATE_X
	 */
	public Integer getRotateX() {
		return this.rotateX;
	}

	/**
	 * ROTATE_Y을 설정합니다..
	 * 
	 * @param rotateY
	 *            ROTATE_Y
	 */
	public void setRotateY(Integer rotateY) {
		this.rotateY = rotateY;
	}

	/**
	 * ROTATE_Y을 가져옵니다..
	 * 
	 * @return ROTATE_Y
	 */
	public Integer getRotateY() {
		return this.rotateY;
	}

	/**
	 * ROTATE_Z을 설정합니다..
	 * 
	 * @param rotateZ
	 *            ROTATE_Z
	 */
	public void setRotateZ(Integer rotateZ) {
		this.rotateZ = rotateZ;
	}

	/**
	 * ROTATE_Z을 가져옵니다..
	 * 
	 * @return ROTATE_Z
	 */
	public Integer getRotateZ() {
		return this.rotateZ;
	}

	/**
	 * COLOR을 설정합니다..
	 * 
	 * @param color
	 *            COLOR
	 */
	public void setColor(Integer color) {
		this.color = color;
	}

	/**
	 * COLOR을 가져옵니다..
	 * 
	 * @return COLOR
	 */
	public Integer getColor() {
		return this.color;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((roomitemId == null) ? 0 : roomitemId.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		Roomitem other = (Roomitem) obj;
		if (roomitemId == null) {
			if (other.roomitemId != null) {
				return false;
			}
		} else if (!roomitemId.equals(other.roomitemId)) {
			return false;
		}
		return true;
	}

}
