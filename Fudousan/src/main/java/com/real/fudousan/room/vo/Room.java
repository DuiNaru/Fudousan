package com.real.fudousan.room.vo;

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * 3D 방 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class Room implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** ROOM_ID. */
	private Integer roomId;

	/** 매물. */
	private Estate estate;

	/** 스냅샷. */
	private String snapshot;

	/** 벽 도면. */
	private String map;

	/** DATE. */
	private Date date;

	/** DEL_DATE. */
	private Date delDate;

	/** HEIGTH. */
	private Integer heigth;

	/** 텍스쳐. */
	private Texture floorTexture;

	/** 텍스쳐. */
	private Texture ceilingTexture;

	/** 회원. */
	private Member member;

	/** 조언 리스트 목록. */
	private Set<Advice> adviceSet;

	/** 방 배치 아이템 목록. */
	private Set<Roomitem> roomitemSet;

	/** 방 벽 목록. */
	private Set<RoomWall> roomWallSet;

	/**
	 * 생성자.
	 */
	public Room() {
		this.adviceSet = new HashSet<Advice>();
		this.roomitemSet = new HashSet<Roomitem>();
		this.roomWallSet = new HashSet<RoomWall>();
	}

	/**
	 * ROOM_ID을 설정합니다..
	 * 
	 * @param roomId
	 *            ROOM_ID
	 */
	public void setRoomId(Integer roomId) {
		this.roomId = roomId;
	}

	/**
	 * ROOM_ID을 가져옵니다..
	 * 
	 * @return ROOM_ID
	 */
	public Integer getRoomId() {
		return this.roomId;
	}

	/**
	 * 매물을 설정합니다..
	 * 
	 * @param estate
	 *            매물
	 */
	public void setEstate(Estate estate) {
		this.estate = estate;
	}

	/**
	 * 매물을 가져옵니다..
	 * 
	 * @return 매물
	 */
	public Estate getEstate() {
		return this.estate;
	}

	/**
	 * 스냅샷을 설정합니다..
	 * 
	 * @param snapshot
	 *            스냅샷
	 */
	public void setSnapshot(String snapshot) {
		this.snapshot = snapshot;
	}

	/**
	 * 스냅샷을 가져옵니다..
	 * 
	 * @return 스냅샷
	 */
	public String getSnapshot() {
		return this.snapshot;
	}

	/**
	 * 벽 도면을 설정합니다..
	 * 
	 * @param map
	 *            벽 도면
	 */
	public void setMap(String map) {
		this.map = map;
	}

	/**
	 * 벽 도면을 가져옵니다..
	 * 
	 * @return 벽 도면
	 */
	public String getMap() {
		return this.map;
	}

	/**
	 * DATE을 설정합니다..
	 * 
	 * @param date
	 *            DATE
	 */
	public void setDate(Date date) {
		this.date = date;
	}

	/**
	 * DATE을 가져옵니다..
	 * 
	 * @return DATE
	 */
	public Date getDate() {
		return this.date;
	}

	/**
	 * DEL_DATE을 설정합니다..
	 * 
	 * @param delDate
	 *            DEL_DATE
	 */
	public void setDelDate(Date delDate) {
		this.delDate = delDate;
	}

	/**
	 * DEL_DATE을 가져옵니다..
	 * 
	 * @return DEL_DATE
	 */
	public Date getDelDate() {
		return this.delDate;
	}

	/**
	 * HEIGTH을 설정합니다..
	 * 
	 * @param heigth
	 *            HEIGTH
	 */
	public void setHeigth(Integer heigth) {
		this.heigth = heigth;
	}

	/**
	 * HEIGTH을 가져옵니다..
	 * 
	 * @return HEIGTH
	 */
	public Integer getHeigth() {
		return this.heigth;
	}

	/**
	 * 텍스쳐을 설정합니다..
	 * 
	 * @param floorTexture
	 *            텍스쳐
	 */
	public void setFloorTexture(Texture floorTexture) {
		this.floorTexture = floorTexture;
	}

	/**
	 * 텍스쳐을 가져옵니다..
	 * 
	 * @return 텍스쳐
	 */
	public Texture getFloorTexture() {
		return this.floorTexture;
	}

	/**
	 * 텍스쳐을 설정합니다..
	 * 
	 * @param ceilingTexture
	 *            텍스쳐
	 */
	public void setCeilingTexture(Texture ceilingTexture) {
		this.ceilingTexture = ceilingTexture;
	}

	/**
	 * 텍스쳐을 가져옵니다..
	 * 
	 * @return 텍스쳐
	 */
	public Texture getCeilingTexture() {
		return this.ceilingTexture;
	}

	/**
	 * 회원을 설정합니다..
	 * 
	 * @param member
	 *            회원
	 */
	public void setMember(Member member) {
		this.member = member;
	}

	/**
	 * 회원을 가져옵니다..
	 * 
	 * @return 회원
	 */
	public Member getMember() {
		return this.member;
	}

	/**
	 * 조언 리스트 목록을 설정합니다..
	 * 
	 * @param adviceSet
	 *            조언 리스트 목록
	 */
	public void setAdviceSet(Set<Advice> adviceSet) {
		this.adviceSet = adviceSet;
	}

	/**
	 * 조언 리스트를 추가합니다..
	 * 
	 * @param advice
	 *            조언 리스트
	 */
	public void addAdvice(Advice advice) {
		this.adviceSet.add(advice);
	}

	/**
	 * 조언 리스트 목록을 가져옵니다..
	 * 
	 * @return 조언 리스트 목록
	 */
	public Set<Advice> getAdviceSet() {
		return this.adviceSet;
	}

	/**
	 * 방 배치 아이템 목록을 설정합니다..
	 * 
	 * @param roomitemSet
	 *            방 배치 아이템 목록
	 */
	public void setRoomitemSet(Set<Roomitem> roomitemSet) {
		this.roomitemSet = roomitemSet;
	}

	/**
	 * 방 배치 아이템를 추가합니다..
	 * 
	 * @param roomitem
	 *            방 배치 아이템
	 */
	public void addRoomitem(Roomitem roomitem) {
		this.roomitemSet.add(roomitem);
	}

	/**
	 * 방 배치 아이템 목록을 가져옵니다..
	 * 
	 * @return 방 배치 아이템 목록
	 */
	public Set<Roomitem> getRoomitemSet() {
		return this.roomitemSet;
	}

	/**
	 * 방 벽 목록을 설정합니다..
	 * 
	 * @param roomWallSet
	 *            방 벽 목록
	 */
	public void setRoomWallSet(Set<RoomWall> roomWallSet) {
		this.roomWallSet = roomWallSet;
	}

	/**
	 * 방 벽를 추가합니다..
	 * 
	 * @param roomWall
	 *            방 벽
	 */
	public void addRoomWall(RoomWall roomWall) {
		this.roomWallSet.add(roomWall);
	}

	/**
	 * 방 벽 목록을 가져옵니다..
	 * 
	 * @return 방 벽 목록
	 */
	public Set<RoomWall> getRoomWallSet() {
		return this.roomWallSet;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((roomId == null) ? 0 : roomId.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		Room other = (Room) obj;
		if (roomId == null) {
			if (other.roomId != null) {
				return false;
			}
		} else if (!roomId.equals(other.roomId)) {
			return false;
		}
		return true;
	}

}
