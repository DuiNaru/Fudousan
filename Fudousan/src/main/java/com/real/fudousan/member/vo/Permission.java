package com.real.fudousan.member.vo;

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

/**
 * 권한 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class Permission implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** PERMISSION_ID. */
	private Integer permissionId;

	/** NAME. */
	private String name;

	/** 회원 목록. */
	private Set<Member> memberSet;

	/**
	 * 생성자.
	 */
	public Permission() {
		this.memberSet = new HashSet<Member>();
	}

	/**
	 * PERMISSION_ID을 설정합니다..
	 * 
	 * @param permissionId
	 *            PERMISSION_ID
	 */
	public void setPermissionId(Integer permissionId) {
		this.permissionId = permissionId;
	}

	/**
	 * PERMISSION_ID을 가져옵니다..
	 * 
	 * @return PERMISSION_ID
	 */
	public Integer getPermissionId() {
		return this.permissionId;
	}

	/**
	 * NAME을 설정합니다..
	 * 
	 * @param name
	 *            NAME
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * NAME을 가져옵니다..
	 * 
	 * @return NAME
	 */
	public String getName() {
		return this.name;
	}

	/**
	 * 회원 목록을 설정합니다..
	 * 
	 * @param memberSet
	 *            회원 목록
	 */
	public void setMemberSet(Set<Member> memberSet) {
		this.memberSet = memberSet;
	}

	/**
	 * 회원를 추가합니다..
	 * 
	 * @param member
	 *            회원
	 */
	public void addMember(Member member) {
		this.memberSet.add(member);
	}

	/**
	 * 회원 목록을 가져옵니다..
	 * 
	 * @return 회원 목록
	 */
	public Set<Member> getMemberSet() {
		return this.memberSet;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((permissionId == null) ? 0 : permissionId.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		Permission other = (Permission) obj;
		if (permissionId == null) {
			if (other.permissionId != null) {
				return false;
			}
		} else if (!permissionId.equals(other.permissionId)) {
			return false;
		}
		return true;
	}

}
