package com.real.fudousan.member.vo;

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * 회원 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class Member implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** MEMBER_ID. */
	private Integer memberId;

	/** EMAIL. */
	private String email;

	/** PASSWORD. */
	private String password;

	/** 전화번호. */
	private String phone;

	/** 사진. */
	private String picture;

	/** EMAIL. */
	private String email;

	/** 소개. */
	private String text;

	/** 가입 날. */
	private Date date;

	/** 탈퇴 날. */
	private Date delDate;

	/** 권한. */
	private Permission permission;

	/** 디자이너 유무. */
	private Integer designer;

	/** 조언 리스트 목록. */
	private Set<Advice> adviceSet;

	/** 조언 리스트 목록. */
	private Set<Advice> adviceSet;

	/** 부동산중개사무소 목록. */
	private Set<Agency> agencySet;

	/** 찜하기 목록. */
	private Set<Favorite> favoriteSet;

	/** 디자이너 프로필 파일 목록. */
	private Set<MemberFile> memberFileSet;

	/** 댓글 목록. */
	private Set<Reply> replySet;

	/** 3D 방 목록. */
	private Set<Room> roomSet;

	/** 텍스쳐 목록. */
	private Set<Texture> textureSet;

	/**
	 * 생성자.
	 */
	public Member() {
		this.adviceSet = new HashSet<Advice>();
		this.agencySet = new HashSet<Agency>();
		this.favoriteSet = new HashSet<Favorite>();
		this.memberFileSet = new HashSet<MemberFile>();
		this.replySet = new HashSet<Reply>();
		this.roomSet = new HashSet<Room>();
		this.textureSet = new HashSet<Texture>();
	}

	/**
	 * MEMBER_ID을 설정합니다..
	 * 
	 * @param memberId
	 *            MEMBER_ID
	 */
	public void setMemberId(Integer memberId) {
		this.memberId = memberId;
	}

	/**
	 * MEMBER_ID을 가져옵니다..
	 * 
	 * @return MEMBER_ID
	 */
	public Integer getMemberId() {
		return this.memberId;
	}

	/**
	 * EMAIL을 설정합니다..
	 * 
	 * @param email
	 *            EMAIL
	 */
	public void setEmail(String email) {
		this.email = email;
	}

	/**
	 * EMAIL을 가져옵니다..
	 * 
	 * @return EMAIL
	 */
	public String getEmail() {
		return this.email;
	}

	/**
	 * PASSWORD을 설정합니다..
	 * 
	 * @param password
	 *            PASSWORD
	 */
	public void setPassword(String password) {
		this.password = password;
	}

	/**
	 * PASSWORD을 가져옵니다..
	 * 
	 * @return PASSWORD
	 */
	public String getPassword() {
		return this.password;
	}

	/**
	 * 전화번호을 설정합니다..
	 * 
	 * @param phone
	 *            전화번호
	 */
	public void setPhone(String phone) {
		this.phone = phone;
	}

	/**
	 * 전화번호을 가져옵니다..
	 * 
	 * @return 전화번호
	 */
	public String getPhone() {
		return this.phone;
	}

	/**
	 * 사진을 설정합니다..
	 * 
	 * @param picture
	 *            사진
	 */
	public void setPicture(String picture) {
		this.picture = picture;
	}

	/**
	 * 사진을 가져옵니다..
	 * 
	 * @return 사진
	 */
	public String getPicture() {
		return this.picture;
	}

	/**
	 * EMAIL을 설정합니다..
	 * 
	 * @param email
	 *            EMAIL
	 */
	public void setEmail(String email) {
		this.email = email;
	}

	/**
	 * EMAIL을 가져옵니다..
	 * 
	 * @return EMAIL
	 */
	public String getEmail() {
		return this.email;
	}

	/**
	 * 소개을 설정합니다..
	 * 
	 * @param text
	 *            소개
	 */
	public void setText(String text) {
		this.text = text;
	}

	/**
	 * 소개을 가져옵니다..
	 * 
	 * @return 소개
	 */
	public String getText() {
		return this.text;
	}

	/**
	 * 가입 날을 설정합니다..
	 * 
	 * @param date
	 *            가입 날
	 */
	public void setDate(Date date) {
		this.date = date;
	}

	/**
	 * 가입 날을 가져옵니다..
	 * 
	 * @return 가입 날
	 */
	public Date getDate() {
		return this.date;
	}

	/**
	 * 탈퇴 날을 설정합니다..
	 * 
	 * @param delDate
	 *            탈퇴 날
	 */
	public void setDelDate(Date delDate) {
		this.delDate = delDate;
	}

	/**
	 * 탈퇴 날을 가져옵니다..
	 * 
	 * @return 탈퇴 날
	 */
	public Date getDelDate() {
		return this.delDate;
	}

	/**
	 * 권한을 설정합니다..
	 * 
	 * @param permission
	 *            권한
	 */
	public void setPermission(Permission permission) {
		this.permission = permission;
	}

	/**
	 * 권한을 가져옵니다..
	 * 
	 * @return 권한
	 */
	public Permission getPermission() {
		return this.permission;
	}

	/**
	 * 디자이너 유무을 설정합니다..
	 * 
	 * @param designer
	 *            디자이너 유무
	 */
	public void setDesigner(Integer designer) {
		this.designer = designer;
	}

	/**
	 * 디자이너 유무을 가져옵니다..
	 * 
	 * @return 디자이너 유무
	 */
	public Integer getDesigner() {
		return this.designer;
	}

	/**
	 * 조언 리스트 목록을 설정합니다..
	 * 
	 * @param adviceSet
	 *            조언 리스트 목록
	 */
	public void setAdviceSet(Set<Advice> adviceSet) {
		this.adviceSet = adviceSet;
	}

	/**
	 * 조언 리스트를 추가합니다..
	 * 
	 * @param advice
	 *            조언 리스트
	 */
	public void addAdvice(Advice advice) {
		this.adviceSet.add(advice);
	}

	/**
	 * 조언 리스트 목록을 가져옵니다..
	 * 
	 * @return 조언 리스트 목록
	 */
	public Set<Advice> getAdviceSet() {
		return this.adviceSet;
	}

	/**
	 * 조언 리스트 목록을 설정합니다..
	 * 
	 * @param adviceSet
	 *            조언 리스트 목록
	 */
	public void setAdviceSet(Set<Advice> adviceSet) {
		this.adviceSet = adviceSet;
	}

	/**
	 * 조언 리스트를 추가합니다..
	 * 
	 * @param advice
	 *            조언 리스트
	 */
	public void addAdvice(Advice advice) {
		this.adviceSet.add(advice);
	}

	/**
	 * 조언 리스트 목록을 가져옵니다..
	 * 
	 * @return 조언 리스트 목록
	 */
	public Set<Advice> getAdviceSet() {
		return this.adviceSet;
	}

	/**
	 * 부동산중개사무소 목록을 설정합니다..
	 * 
	 * @param agencySet
	 *            부동산중개사무소 목록
	 */
	public void setAgencySet(Set<Agency> agencySet) {
		this.agencySet = agencySet;
	}

	/**
	 * 부동산중개사무소를 추가합니다..
	 * 
	 * @param agency
	 *            부동산중개사무소
	 */
	public void addAgency(Agency agency) {
		this.agencySet.add(agency);
	}

	/**
	 * 부동산중개사무소 목록을 가져옵니다..
	 * 
	 * @return 부동산중개사무소 목록
	 */
	public Set<Agency> getAgencySet() {
		return this.agencySet;
	}

	/**
	 * 찜하기 목록을 설정합니다..
	 * 
	 * @param favoriteSet
	 *            찜하기 목록
	 */
	public void setFavoriteSet(Set<Favorite> favoriteSet) {
		this.favoriteSet = favoriteSet;
	}

	/**
	 * 찜하기를 추가합니다..
	 * 
	 * @param favorite
	 *            찜하기
	 */
	public void addFavorite(Favorite favorite) {
		this.favoriteSet.add(favorite);
	}

	/**
	 * 찜하기 목록을 가져옵니다..
	 * 
	 * @return 찜하기 목록
	 */
	public Set<Favorite> getFavoriteSet() {
		return this.favoriteSet;
	}

	/**
	 * 디자이너 프로필 파일 목록을 설정합니다..
	 * 
	 * @param memberFileSet
	 *            디자이너 프로필 파일 목록
	 */
	public void setMemberFileSet(Set<MemberFile> memberFileSet) {
		this.memberFileSet = memberFileSet;
	}

	/**
	 * 디자이너 프로필 파일를 추가합니다..
	 * 
	 * @param memberFile
	 *            디자이너 프로필 파일
	 */
	public void addMemberFile(MemberFile memberFile) {
		this.memberFileSet.add(memberFile);
	}

	/**
	 * 디자이너 프로필 파일 목록을 가져옵니다..
	 * 
	 * @return 디자이너 프로필 파일 목록
	 */
	public Set<MemberFile> getMemberFileSet() {
		return this.memberFileSet;
	}

	/**
	 * 댓글 목록을 설정합니다..
	 * 
	 * @param replySet
	 *            댓글 목록
	 */
	public void setReplySet(Set<Reply> replySet) {
		this.replySet = replySet;
	}

	/**
	 * 댓글를 추가합니다..
	 * 
	 * @param reply
	 *            댓글
	 */
	public void addReply(Reply reply) {
		this.replySet.add(reply);
	}

	/**
	 * 댓글 목록을 가져옵니다..
	 * 
	 * @return 댓글 목록
	 */
	public Set<Reply> getReplySet() {
		return this.replySet;
	}

	/**
	 * 3D 방 목록을 설정합니다..
	 * 
	 * @param roomSet
	 *            3D 방 목록
	 */
	public void setRoomSet(Set<Room> roomSet) {
		this.roomSet = roomSet;
	}

	/**
	 * 3D 방를 추가합니다..
	 * 
	 * @param room
	 *            3D 방
	 */
	public void addRoom(Room room) {
		this.roomSet.add(room);
	}

	/**
	 * 3D 방 목록을 가져옵니다..
	 * 
	 * @return 3D 방 목록
	 */
	public Set<Room> getRoomSet() {
		return this.roomSet;
	}

	/**
	 * 텍스쳐 목록을 설정합니다..
	 * 
	 * @param textureSet
	 *            텍스쳐 목록
	 */
	public void setTextureSet(Set<Texture> textureSet) {
		this.textureSet = textureSet;
	}

	/**
	 * 텍스쳐를 추가합니다..
	 * 
	 * @param texture
	 *            텍스쳐
	 */
	public void addTexture(Texture texture) {
		this.textureSet.add(texture);
	}

	/**
	 * 텍스쳐 목록을 가져옵니다..
	 * 
	 * @return 텍스쳐 목록
	 */
	public Set<Texture> getTextureSet() {
		return this.textureSet;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((memberId == null) ? 0 : memberId.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		Member other = (Member) obj;
		if (memberId == null) {
			if (other.memberId != null) {
				return false;
			}
		} else if (!memberId.equals(other.memberId)) {
			return false;
		}
		return true;
	}

}
